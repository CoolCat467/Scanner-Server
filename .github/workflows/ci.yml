name: CI

permissions: {}

on:
  push:
    branches-ignore:
      - "dependabot/**"
  pull_request:

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && format('-{0}', github.sha) || '' }}
  cancel-in-progress: true

jobs:
##  Windows:
##    name: 'Windows (${{ matrix.python }}, ${{ matrix.arch }}${{ matrix.extra_name }})'
##    timeout-minutes: 20
##    runs-on: 'windows-latest'
##    strategy:
##      fail-fast: false
##      matrix:
##        python: ['3.9', '3.10', '3.11', '3.12']
##        arch: ['x86', 'x64']
##    continue-on-error: >-
##      ${{
##        (
##          endsWith(matrix.python, '-dev')
##          || endsWith(matrix.python, '-nightly')
##        )
##        && true
##        || false
##      }}
##    steps:
##      - name: Checkout
##        uses: actions/checkout@v4
##        with:
##          persist-credentials: false
##      - name: Setup python
##        uses: actions/setup-python@v5
##        with:
##          # This allows the matrix to specify just the major.minor version while still
##          # expanding it to get the latest patch version including alpha releases.
##          # This avoids the need to update for each new alpha, beta, release candidate,
##          # and then finally an actual release version.  actions/setup-python doesn't
##          # support this for PyPy presently so we get no help there.
##          #
##          # 'CPython' -> '3.9.0-alpha - 3.9.X'
##          # 'PyPy'    -> 'pypy-3.9'
##          python-version: ${{ fromJSON(format('["{0}", "{1}"]', format('{0}.0-alpha - {0}.X', matrix.python), matrix.python))[startsWith(matrix.python, 'pypy')] }}
##          architecture: '${{ matrix.arch }}'
##          cache: pip
##          cache-dependency-path: test-requirements.txt
##      - name: Run tests
##        run: ./ci.sh
##        shell: bash

  Ubuntu:
    name: 'Ubuntu (${{ matrix.python }}${{ matrix.extra_name }})'
    timeout-minutes: 10
    runs-on: 'ubuntu-latest'
    # Only run for PRs or pushes to main
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && github.ref == 'refs/heads/main')
    strategy:
      fail-fast: false
      matrix:
        python: ['3.9', '3.10', '3.11', '3.12', '3.13']
        check_formatting: ['0']
        extra_name: ['']
        include:
          - python: '3.12'
            check_formatting: '1'
            extra_name: ', check formatting'
    continue-on-error: >-
      ${{
        (
          endsWith(matrix.python, '-dev')
          || endsWith(matrix.python, '-nightly')
        )
        && true
        || false
      }}
    steps:
      - name: Checkout
        with:
          persist-credentials: false
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        if: "!endsWith(matrix.python, '-dev')"
        with:
          python-version: ${{ fromJSON(format('["{0}", "{1}"]', format('{0}.0-alpha - {0}.X', matrix.python), matrix.python))[startsWith(matrix.python, 'pypy')] }}
          cache: pip
          cache-dependency-path: test-requirements.txt
      - name: Setup python (dev)
        uses: deadsnakes/action@v2.0.2
        if: endsWith(matrix.python, '-dev')
        with:
          python-version: '${{ matrix.python }}'
      - name: Run tests
        run: ./ci.sh
        env:
          CHECK_FORMATTING: '${{ matrix.check_formatting }}'

##  macOS:
##    name: 'macOS (${{ matrix.python }})'
##    timeout-minutes: 15
##    runs-on: 'macos-latest'
##    strategy:
##      fail-fast: false
##      matrix:
##        python: ['3.9', '3.10', '3.11', '3.12']
##    continue-on-error: >-
##      ${{
##        (
##          endsWith(matrix.python, '-dev')
##          || endsWith(matrix.python, '-nightly')
##        )
##        && true
##        || false
##      }}
##    steps:
##      - name: Checkout
##        uses: actions/checkout@v4
##        with:
##          persist-credentials: false
##      - name: Setup python
##        uses: actions/setup-python@v5
##        with:
##          python-version: ${{ fromJSON(format('["{0}", "{1}"]', format('{0}.0-alpha - {0}.X', matrix.python), matrix.python))[startsWith(matrix.python, 'pypy')] }}
##          cache: pip
##          cache-dependency-path: test-requirements.txt
##      - name: Run tests
##        run: ./ci.sh

##  # https://github.com/marketplace/actions/alls-green#why
##  check:  # This job does nothing and is only used for the branch protection
##
##    if: always()
##
##    needs:
##      - Windows
##      - Ubuntu
##      - macOS
##
##    runs-on: ubuntu-latest
##
##    steps:
##      - name: Decide whether the needed jobs succeeded or failed
##        uses: re-actors/alls-green@release/v1
##        with:
##          jobs: ${{ toJSON(needs) }}
